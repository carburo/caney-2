imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    app.locales: en|es|fr|de
    app.path.hostel_images: /uploads/images/hostels
    app.path.user_profile_pictures: /uploads/images/profile

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
      - 'bootstrap_3_layout.html.twig'
      - 'VichUploaderBundle:Form:fields.html.twig'
    globals:
      _locales: '%app.locales%'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

stof_doctrine_extensions:
    default_locale: en
    translation_fallback: true

    orm:
        default:
          translatable: true
          sortable: true
          sluggable: true

fos_user:
  db_driver: orm
  firewall_name: main
  user_class: AppBundle\Entity\User
  registration:
    confirmation:
      enabled: true
    form:
      type: AppBundle\Form\RegistrationType
  profile:
    form:
      type: AppBundle\Form\ProfileType
  from_email:
    address: noreply@hostalcabriales.com
    sender_name: Hostal Cabriales

vich_uploader:
  db_driver: orm
  mappings:
    hostel_images:
      uri_prefix:         '%app.path.hostel_images%'
      upload_destination: '%kernel.root_dir%/../web/%app.path.hostel_images%'
      directory_namer:    app.directory_namer.hostel
      delete_on_update:   true
      delete_on_remove:   true
    user_profile_picture:
      uri_prefix:         '%app.path.user_profile_pictures%'
      upload_destination: '%kernel.root_dir%/../web/%app.path.user_profile_pictures%'
      delete_on_update:   true
      delete_on_remove:   true
      namer:
        service: vich_uploader.namer_property
        options: { property: 'id'}

liip_imagine:
  resolvers:
    default:
      web_path: ~

  driver: gd
  filter_sets:
    cache: ~
    app_thumb:
      quality: 75
      filters:
        auto_rotate: ~
        thumbnail: { size: [271, 203], mode: outbound }
        strip: ~
    app_image:
      filters:
        auto_rotate: ~
        downscale: { max: [768, 768] }
        watermark:
          # Relative path to the watermark file (prepended with "%kernel.root_dir%/")
          image: Resources/data/watermark.png
          # Size of the watermark relative to the origin images size
          size: 0.5
          # Position: One of topleft,top,topright,left,center,right,bottomleft,bottom,bottomright
          position: bottomright
        strip: ~

sonata_block:
  default_contexts: [cms]
  blocks:
    # enable the SonataAdminBundle block
    sonata.admin.block.admin_list:
      contexts: [admin]
